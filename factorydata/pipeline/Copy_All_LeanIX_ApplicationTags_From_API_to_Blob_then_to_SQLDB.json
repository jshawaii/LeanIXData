{
	"name": "Copy_All_LeanIX_ApplicationTags_From_API_to_Blob_then_to_SQLDB",
	"properties": {
		"description": "This pipeline uses the maximum pageSize and iterates through using the cursor to get ALL of the Applications Factsheets into multiple JSON files in Blob, then to Azure SQLDB",
		"activities": [
			{
				"name": "GetLeanIXBearerToken",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://hawaii.leanix.net/services/mtm/v1/oauth2/token",
					"method": "POST",
					"headers": {
						"Authorization": {
							"value": "@concat('Basic ',base64('apitoken:99yxDCreCvFnCXxKCpEL6cvpgOrahsTGfQG9JxXO'))",
							"type": "Expression"
						},
						"Content-Type": "application/x-www-form-urlencoded"
					},
					"body": "grant_type=client_credentials"
				}
			},
			{
				"name": "SetTotal",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GetFirst100Applications",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "total",
					"value": {
						"value": "@string(activity('GetFirst100Applications').output.total)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "GetFirst100Applications",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "GetLeanIXBearerToken",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://hawaii.leanix.net/services/pathfinder/v1/factSheets?type=Application&pageSize=100&permissions=false",
					"method": "GET",
					"headers": {
						"Authorization": {
							"value": "@concat(string(activity('GetLeanIXBearerToken').output.token_type),' ',string(activity('GetLeanIXBearerToken').output.access_token))",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "DetermineMaxCalls",
				"description": "Determine how many times to call the REST endpoint to get next set of records.",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "SetTotal",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Maximum",
					"value": {
						"value": "@string(div(float(variables('total')),100))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "RoundUpUpperLimit",
				"description": "Roundup (if necessary) the upper limit of the calls",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "DetermineMaxCalls",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(float(variables('Maximum')),div(int(variables('total')),100))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "SetUpperLimit",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "UpperLimit",
								"value": {
									"value": "@string(div(int(variables('total')),100))",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "SetUpperLimitPlus1",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "UpperLimit",
								"value": {
									"value": "@string(add(div(int(variables('total')),100),1))",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Do_Until_CurrentLimit_exeeds_Max",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "RoundUpUpperLimit",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(int(variables('CurrentLimit')),int(variables('UpperLimit')))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy_LeanIX_Application_JSON",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "GetLeanIXBearerTokenAgain",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"additionalHeaders": {
										"Authorization": {
											"value": "@concat(string(activity('GetLeanIXBearerToken').output.token_type),' ',string(activity('GetLeanIXBearerToken').output.access_token))",
											"type": "Expression"
										}
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings",
										"quoteAllText": true
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "Input_LeanIX_Application_100_JSO",
									"type": "DatasetReference",
									"parameters": {
										"Cursor": {
											"value": "@variables('Cursor')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Output_LeanIX_All_Application_Json_to_Blob",
									"type": "DatasetReference",
									"parameters": {
										"FilenameSuffix": {
											"value": "@concat(variables('CurrentLimit'),'.json')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "SetCurrentCursor",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "LookupCursor",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Cursor",
								"value": {
									"value": "@activity('LookupCursor').output.value[0].cursor",
									"type": "Expression"
								}
							}
						},
						{
							"name": "IncrementCurrentLimit",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "SetPreviousLimitToCurrent_B4_increase",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "CurrentLimit",
								"value": {
									"value": "@string(add(int(variables('PreviousLimit')),1))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "SetPreviousLimitToCurrent_B4_increase",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "SetCurrentCursor",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "PreviousLimit",
								"value": {
									"value": "@variables('CurrentLimit')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "LookupCursor",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Copy_LeanIX_Application_JSON",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": false,
										"enablePartitionDiscovery": false
									}
								},
								"dataset": {
									"referenceName": "Output_LeanIX_Application_JSON_to_Blob",
									"type": "DatasetReference",
									"parameters": {
										"FilenameSuffix": {
											"value": "@concat(variables('CurrentLimit'),'.json')",
											"type": "Expression"
										}
									}
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "GetLeanIXBearerTokenAgain",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://hawaii.leanix.net/services/mtm/v1/oauth2/token",
								"method": "POST",
								"headers": {
									"Authorization": {
										"value": "@concat('Basic ',base64('apitoken:99yxDCreCvFnCXxKCpEL6cvpgOrahsTGfQG9JxXO'))",
										"type": "Expression"
									},
									"Content-Type": "application/x-www-form-urlencoded"
								},
								"body": "grant_type=client_credentials"
							}
						}
					],
					"timeout": "7.00:00:00"
				}
			},
			{
				"name": "Copy_LeanIX_ApplicationTag_JSON_to_SQLDB",
				"description": "This pipeline determines the total number of Applications, then goes out and gets 100 at a time from the REST endpoint and putting them into JSON files in BLOB. It then extracts just the Tag (not TagGroup) JSON information to ApplicationTag table in SQLDB.",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Do_Until_CurrentLimit_exeeds_Max",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['id']"
								},
								"sink": {
									"name": "ApplicationID",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['tags'][0]['id']"
								},
								"sink": {
									"name": "TagID",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['tags'][0]['name']"
								},
								"sink": {
									"name": "TagName",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['data']"
					}
				},
				"inputs": [
					{
						"referenceName": "All_LeanIX_Application_Json_Blob",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Output_LeanIX_ApplicationTag_SQLDB",
						"type": "DatasetReference"
					}
				]
			}
		],
		"variables": {
			"Cursor": {
				"type": "String"
			},
			"total": {
				"type": "String",
				"defaultValue": "100"
			},
			"Maximum": {
				"type": "String",
				"defaultValue": "0"
			},
			"UpperLimit": {
				"type": "String"
			},
			"PreviousLimit": {
				"type": "String",
				"defaultValue": "0"
			},
			"CurrentLimit": {
				"type": "String",
				"defaultValue": "0"
			}
		},
		"folder": {
			"name": "LeanIX Pipelines (State of Hawaii PoC)/Dev Pipeline"
		},
		"annotations": []
	}
}