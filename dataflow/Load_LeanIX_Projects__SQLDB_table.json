{
	"name": "Load_LeanIX_Projects__SQLDB_table",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Output_LeanIX_Project_JSON_to_BLOB",
						"type": "DatasetReference"
					},
					"name": "SourceLeanIXProjectJSONfromBlob"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Output_LeanIX_Project_SQLDB",
						"type": "DatasetReference"
					},
					"name": "DestLeanIXProjectSQLDB"
				}
			],
			"transformations": [
				{
					"name": "AlterRow1"
				}
			],
			"script": "\n\nsource(output(\n\t\tstatus as string,\n\t\terrors as string[],\n\t\ttotal as string,\n\t\tdata as (id as string, name as string, description as string, displayName as string, fullName as string, type as string, tags as (id as string, tagGroup as (id as string, name as string, shortName as string, description as string, mode as string, restrictToFactSheetTypes as string[]), name as string, description as string, bgColor as string, status as string)[], fields as (name as string, data as (type as string, phases as (startDate as string, phase as string)[]), dataType as string)[], relations as string[], completion as (type as string, completion as double, percentage as string, subCompletions as (section.information as (type as string, completion as double, percentage as string, subCompletions as (subsection.nameDescription.label as (type as string, completion as double, percentage as string), subsection.lifecycle.label as (type as string, completion as double, percentage as string), subsection.successors.label as (type as string, completion as double, percentage as string), subsection.predecessors.label as (type as string, completion as double, percentage as string))), section.projectSetup as (type as string, completion as double, percentage as string, subCompletions as (subsection.projectProviders.label as (type as string, completion as double, percentage as string), subsection.projectBenefit.label as (type as string, completion as double, percentage as string), subsection.budgetCosts.label as (type as string, completion as double, percentage as string))), section.dependencies as (type as string, completion as double, percentage as string, subCompletions as (subsection.children.label as (type as string, completion as double, percentage as string), subsection.requiredBy.label as (type as string, completion as double, percentage as string), subsection.parents.label as (type as string, completion as double, percentage as string), subsection.requires.label as (type as string, completion as double, percentage as string))), section.projectEnvironment as (type as string, completion as double, percentage as string, subCompletions as (subsection.factSheetsAffected.label__ as (type as string, completion as double, percentage as string), subsection.projectValueRisk.label as (type as string, completion as double, percentage as string), subsection.factSheetsAffected.label as (type as string, completion as double, percentage as string), subsection.factSheetsAffected.label___ as (type as string, completion as double, percentage as string), subsection.factSheetsAffected.label____ as (type as string, completion as double, percentage as string), subsection.factSheetsAffected.label_ as (type as string, completion as double, percentage as string))))), createdAt as string, updatedAt as string, documents as string[], status as string, level as string, score as string, rev as string, naFields as string[], subscriptions as string[], permittedReadACL as string[], permittedWriteACL as string[])[],\n\t\tcursor as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100,\n\tinferDriftedColumnTypes: true) ~> SourceLeanIXProjectJSONfromBlob\nSourceLeanIXProjectJSONfromBlob alterRow(updateIf(true())) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tid as string,\n\t\tname as string,\n\t\tdisplayName as string,\n\t\tfullname as string,\n\t\ttype as string,\n\t\tcreatedAt as timestamp,\n\t\tupdatedAt as timestamp,\n\t\tstatus as string,\n\t\tlevel as integer,\n\t\tscore as string,\n\t\trev as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tformat: 'table',\n\tkeys:['id'],\n\tmapColumn(\n\t\tid,\n\t\tname,\n\t\tdisplayName,\n\t\tfullname = fullName,\n\t\ttype,\n\t\tstatus,\n\t\tscore\n\t)) ~> DestLeanIXProjectSQLDB"
		}
	}
}